
@{
    ViewBag.Title = "申報資料上傳作業";
}

<!DOCTYPE html>
<html>
<head>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/Content/cshtmljs")

    <script type="text/javascript">
        function error_handler(e) {
            if (e.errors) {
                var message = "Errors:\n";
                $.each(e.errors, function (key, value) {
                    if ('errors' in value) {
                        $.each(value.errors, function () {
                            message += this + "\n";
                        });
                    }
                });
                alert(message);
            }
        }

        function onChange_totfa() {
            var hospid = this.value();            

            var ddl = $("#ddlTOTFA").data("kendoDropDownList");            
            ddl.dataSource.read(hospid); // rebind the Grid's DataSource

            var gridDtlfa = $("#grid_Dtlfa").data("kendoGrid");
            gridDtlfa.dataSource.read('');            
            var grid = $("#grid_UploadFile").data("kendoGrid");
            grid.dataSource.read(hospid);
        }

        function FromHospitalData(e) {
            var value = $("#ddlHospital").data("kendoDropDownList").value();
            //alert(value);
            return { sId: value }; // send the parent id value as part of the Read request
        }

        function onChange() {
            var pid = this.value();

            var grid = $("#grid_Dtlfa").data("kendoGrid");
                grid.dataSource.read(pid); // rebind the Grid's DataSource            
        }

        function additionalData(e) {
            var HospIDValue = $("#ddlHospital").data("kendoDropDownList").value();
            var TOTFAValue = $("#ddlTOTFA").data("kendoDropDownList").value();            
            return { sHospID: HospIDValue, sTotfaID: TOTFAValue };
        }

        function GetHosptialSelected(e) {
            var HospIDValue = $("#ddlHospital").data("kendoDropDownList").value();            
            return { sHospID: HospIDValue};
        }

        function sync_handler(e) { this.read(); }

        function onClose() {
            $("#uploadButton").show();
            var grid = $("#grid_UploadFile").data("kendoGrid");
            grid.dataSource.read();
        }
                
        function onCancel() {
        }

        function onDialogClose() {
            $("#showDialogBtn").fadeIn();
        }

        function onDialogOpen() {
            $("#showDialogBtn").fadeOut();
        }

        function showDialog() {
            $("#dialogWindow").data("kendoDialog").open();
            //$('#dialogWindow').data("kendoDialog").open();
        }

        function onUpload(e) {
            var HospIDValue = $("#ddlHospital").data("kendoDropDownList").value();

            e.data = { HospID: HospIDValue };
        }

        $(document).ready(function () {
            $("#uploadButton").bind("click", function () {
                $("#window").data("kendoWindow").open();
                $("#window").data("kendoWindow").center();
                $("#uploadButton").hide();
                //$("#uploadButton").attr('disabled','disabled');
            });

            //$("#showDialogBtn").bind("click", function () {
            //    $("#dialogWindow").data("kendoDialog").open();
            //    $("#dialogWindow").data("kendoDialog").center();
            //    $("#showDialogBtn").hide();
            //});
        });
    </script>

    <style>
        /*Icon to the left side of the titlebar */
        .k-alert .k-window-titlebar::before {
            content: '訊息';
            /*font-family: "FontAwesome";*/
            font-weight: bold;
            font-size: 18px;
        }
        /*Icon to the right side of the titlebar */
        .k-alert .k-window-titlebar::after {
            /*font-family: "FontAwesome";
            content: "\f059";*/
            font-weight: bold;
            font-size: 18px;
            float: right;
        }

        .k-alert .k-window-titlebar .k-dialog-title {
            visibility: collapse;
        }

        .k-alert .k-content {
            font-size: 40px !important;
        }

        .k-dialog.k-alert .k-dialog-titlebar {
            background-color: #3f51b5;
            color: white;
        }

        .k-dialog.k-alert .k-button {
            background-color: #3f51b5;
            color: white;
        }

        .k-dialog .k-header {
            background-color: #F5F5F5;
        }

        .k-grid-header .k-header .k-link {
            color: white !important;
        }

        #grid_Dtlfa .k-grid-header .k-header {
            background-color: #18538b;
        }
        
        #grid_UploadFile .k-grid-header .k-header {
            background-color: #005384;
        }
    </style>
</head>
<body>
    <h2>申報資料上傳作業</h2>
    <div class="container-fluid">
        <div class="row" style="padding-bottom:5px;">
            <div class="col-md-4">
                <div class="input-group" style="float:left;">
                    <span class="input-group-addon no-modify-color">醫事機構：</span>
                    @(Html.Kendo().DropDownList()
                        .Name("ddlHospital")
                        .DataTextField("HospName")
                        .DataValueField("HospID")
                        .Events(e => e.Change("onChange_totfa"))
                        .Filter("contains")
                        .DataSource(source =>
                        {
                            source.Read(read =>
                            {
                                read.Action("GetHospital", "Sys", new { HospID = @ViewBag.HospID });
                            }).ServerFiltering(false);;
                        })
                        .Enable(true)
                        .HtmlAttributes(new { @class = "form-control pull-left" })
                    )
                </div>
            </div>
            <div class="col-md-2">
                <div class="input-group" style="float:left;">
                    <span class="input-group-addon no-modify-color">申報年月：</span>
                    @(Html.Kendo().DropDownList()
                        .Name("ddlTOTFA")
                        .DataTextField("t3")
                        .DataValueField("id")
                        .Events(e => e.Change("onChange"))
                        .DataSource(source =>
                        {
                            source.Read(read => read.Action("GetTotfa", "Sys").Data("FromHospitalData"));                                  
                        })
                        .Enable(true)
                        .HtmlAttributes(new { @class = "form-control pull-left" })
                    )
                </div>
            </div>
            <div class="col-md-6">
                @*<div style="float:left;padding-right:10px;"><button type="submit" class="btn bg-blue-active">查詢</button></div>*@
                <span id="uploadButton" class="btn bg-blue-active">上傳檔案(TOTFA.XML)</span>
            </div>
        </div>
        <div class="row">
            <div class="col-md-8">
                <div class="box box-success">
                    <div class="box-header with-border head-title">
                        <h3 class="box-title">申報資料</h3>
                        <div class="box-tools pull-right">
                            <button type="button" class="btn btn-box-tool head-title" data-widget="collapse" data-toggle="tooltip">
                                <i class="fa fa-minus"></i>
                            </button>
                        </div>
                    </div>
                    <div class="box-body">
                        <div id="myWindow">
                            @(Html.Kendo().Grid<ZMCMSv2Sys.ViewModels.ViewModel_HIDtlfa>()
                                .Name("grid_Dtlfa")                                
                                .Columns(columns =>
                                {
                                    columns.Bound(d => d.id).Hidden(true);
                                    columns.Bound(d => d.totfa_id).Hidden(true);
                                    columns.Bound(d => d.d1);
                                    columns.Bound(d => d.d2);
                                    columns.Bound(d => d.d8);
                                    columns.Bound(d => d.d9);
                                    columns.Bound(d => d.d10);
                                })
                                .ColumnMenu()                                
                                .Pageable(page => page.Refresh(true)
                                    .ButtonCount(30)
                                    .PageSizes(new[] { 50, 100, 300, 500, 1000 })
                                    .Messages(message => message.ItemsPerPage("每頁顯示數目")))
                                    .Navigatable()
                                    .Sortable(sortable =>
                                    {
                                        sortable.SortMode(GridSortMode.MultipleColumn);
                                    })
                                .Filterable()                                
                                .Scrollable(scrollable => scrollable.Enabled(true).Height(500))
                                .Sortable(sortable =>
                                {
                                    sortable.SortMode(GridSortMode.MultipleColumn);
                                })                                
                                .DataSource(dataSource => dataSource
                                    .Ajax()
                                    .Sort(x => { x.Add("d1").Ascending(); x.Add("d2").Ascending(); })                                    
                                    .PageSize(50)
                                    .Model(model => model.Id(p => p.id))
                                    //.Events(events => events.Error("error_handler").Sync("sync_handler"))
                                    .Read(read => read.Action("Get_Dtlfa_By_Id", "HIUpload").Data("additionalData"))
                                )
                                .Events(events => events.DataBound("dataBound"))
                                .ClientDetailTemplateId("OrdfaTemplate"))
                            
                            <script id="OrdfaTemplate" type="text/kendo-tmpl">
                                @(Html.Kendo().Grid<ZMCMSv2Sys.ViewModels.ViewModel_HIOrdfa>()
                                    //.Name("MedicalGroupHospitalTemplate_#=MGRowid#") // template expression, to be evaluated in the master context
                                    .Name("dtlfa_#=id#")
                                    .Columns(columns =>
                                    {
                                        columns.Bound(d => d.id).Hidden(true);
                                        columns.Bound(d => d.dtlfa_id).Hidden(true);
                                        columns.Bound(d => d.p4);
                                        columns.Bound(d => d.p5);
                                        columns.Bound(d => d.p1);
                                        columns.Bound(d => d.p2);
                                        columns.Bound(d => d.p7);
                                        columns.Bound(d => d.intSeq);
                                    })
                                    .Pageable(page => page.Refresh(true))
                                    .DataSource(dataSource => dataSource.Ajax()
                                        .Sort(sort => sort.Add("intSeq").Ascending())
                                        .Model(model =>
                                        {
                                            model.Id(o => o.id);
                                        })
                                        .Events(events => events.Error("error_handler").Sync("sync_handler"))
                                        .Read(read => read.Action("Get_Ordfa_By_Id", "HIUpload", new { sDtlfaID = "#=id#" }).Data("GetHosptialSelected"))
                                        .PageSize(10))
                                        .Sortable()
                                        .ToClientTemplate()
                                )
                            </script>

                            @(Html.Kendo().Window().Name("window").Title("上傳檔案").Content(@<text>
                                    @using (@Html.BeginForm())
                                    {
                                        @(Html.Kendo().Upload()
                                            .Multiple(true)
                                            .Name("annex")
                                            .HtmlAttributes(new { accept = ".xml" })
                                            .Validation(v => v.AllowedExtensions(new string[] { ".xml", ".zip" }))
                                            .Async(async => async.AutoUpload(false)
                                                .Save("Async_Save", "HIUpload")     //, new { HospID = @ViewBag.HospID }
                                                .Remove("Async_Remove", "HIUpload"))
                                            .Events(e => e.Upload("onUpload"))
                                        )
                                    }
                            </text>).Draggable().Resizable().Width(350).Actions(actions => actions.Close()).Events(ev => ev.Close("onClose")).Visible(false)
                            )
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="box box-danger">
                    <div class="box-header with-border head-title">
                        <h3 class="box-title">上載資料</h3>
                        <div class="box-tools pull-right">
                            <button type="button" class="btn btn-box-tool head-title" data-widget="collapse" data-toggle="tooltip">
                                <i class="fa fa-minus"></i>
                            </button>
                        </div>
                    </div>
                    <div class="box-body">
                        <div id="myWindow">
                            @(Html.Kendo().Grid<ZMCMSv2Sys.ViewModels.ViewModel_UploadServerStatus>()
                                .Name("grid_UploadFile")
                                .Columns(columns =>
                                {
                                    columns.Bound(d => d.USRowid).Hidden(true);
                                    columns.Bound(d => d.USHospRowid).Hidden(true);
                                    columns.Bound(d => d.USHospID).Hidden(true);
                                    columns.Bound(d => d.USLoadDateTime).Format("{0: yyyy-MM-dd HH:mm:ss}").Width(120);
                                    columns.Bound(d => d.USLoadFilename);
                                    columns.Bound(d => d.USServerStatus).Width(80);
                                    columns.Bound(d => d.USRecordCount).Hidden(true);
                                })
                                .ColumnMenu()
                                .Pageable(page => page.Refresh(true)
                                .ButtonCount(30)
                                .PageSizes(new[] { 50, 100, 300, 500, 1000 })
                                .Messages(message => message.ItemsPerPage("每頁顯示數目")))
                                .Navigatable()
                                .Sortable(sortable =>
                                {
                                    sortable.SortMode(GridSortMode.MultipleColumn);
                                })
                                .Filterable()
                                .Scrollable(scrollable => scrollable.Enabled(true).Height(500))
                                .Sortable(sortable =>
                                {
                                    sortable.SortMode(GridSortMode.MultipleColumn);
                                })
                                .DataSource(dataSource => dataSource
                                    .Ajax()
                                    .Sort(x => { x.Add("USLoadDateTime").Descending(); })
                                    .PageSize(50)
                                    .Model(model => model.Id(p => p.USRowid))
                                    //.Events(events => events.Error("error_handler").Sync("sync_handler"))
                                    .Read(read => read.Action("Get_ServerStatus_By_HospID", "Sys").Data("GetHosptialSelected"))
                                ))
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        function dataBound() {
            this.expandRow(this.tbody.find("tr.k-master-row").first());
        }
    </script>
</body>
</html>


