
@{
    ViewBag.Title = "檢驗資料上傳作業";
}

<!DOCTYPE html>
<html>
<head>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/Content/cshtmljs")

    <script type="text/javascript">
        function error_handler(e) {
            if (e.errors) {
                var message = "Errors:\n";
                $.each(e.errors, function (key, value) {
                    if ('errors' in value) {
                        $.each(value.errors, function () {
                            message += this + "\n";
                        });
                    }
                });
                alert(message);
            }
        }

        // 
        //function onChange_totfa() {
        //    var hospid = this.value();            

        //    var ddl = $("#ddlTOTFA").data("kendoDropDownList");            
        //    ddl.dataSource.read(hospid); // rebind the Grid's DataSource

        //    var gridDtlfa = $("#grid_LP").data("kendoGrid");
        //    gridDtlfa.dataSource.read('');
        //    var gridOrdfa = $("#grid_LPD").data("kendoGrid");
        //    gridOrdfa.dataSource.read('');   
        //    var grid = $("#grid_UploadFile").data("kendoGrid");
        //    grid.dataSource.read(hospid);
        //}

        function FromHospitalData(e) {
            var value = $("#ddlHospital").data("kendoDropDownList").value();
            //alert(value);
            return { sId: value }; // send the parent id value as part of the Read request
        }

        function onChange() {
            var pid = this.value();

            var grid = $("#grid_LP").data("kendoGrid");
            grid.dataSource.read(pid); // rebind the Grid's DataSource   

            var gridOrdfa = $("#grid_LPD").data("kendoGrid");
            gridOrdfa.dataSource.read('');
        }

        function additionalData(e) {
            var HospIDValue = $("#ddlHospital").data("kendoDropDownList").value();
            //var TOTFAValue = $("#ddlTOTFA").data("kendoDropDownList").value();            
            return { sHospID: HospIDValue };
        }

        function GetHosptialSelected(e) {
            var HospIDValue = $("#ddlHospital").data("kendoDropDownList").value();            
            return { sHospID: HospIDValue};
        }

        function Grid_OnRowSelect(e) {
            // var element = e.sender.select();
            var grid = e.sender;
            var selectedRow = grid.select();
            var dataItem = grid.dataItem(selectedRow);
            var HospIDValue = $("#ddlHospital").data("kendoDropDownList").value();
            //var dsa = JSON.parse(JSON.stringify($('#grid_Dtlfa').data('kendoGrid').dataItem(element[0]), ['totfa_id']));
            //var dsa = JSON.parse(JSON.stringify(e.sender.dataItem(element[0]), ['totfa_id']));

            //alert(dataItem.id);
            //alert(HospIDValue);

            $("#grid_LPD").data("kendoGrid").dataSource.read({ sHospID: HospIDValue, id: dataItem.id });
        }

        function sync_handler(e) { this.read(); }

        function onClose() {
            $("#uploadButton").show();
            var grid = $("#grid_UploadFile").data("kendoGrid");
            grid.dataSource.read();
        }
                
        function onCancel() {
        }

        function onDialogClose() {
            $("#showDialogBtn").fadeIn();
        }

        function onDialogOpen() {
            $("#showDialogBtn").fadeOut();
        }

        function showDialog() {
            $("#dialogWindow").data("kendoDialog").open();
            //$('#dialogWindow').data("kendoDialog").open();
        }

        function onUpload(e) {
            var HospIDValue = $("#ddlHospital").data("kendoDropDownList").value();

            e.data = { HospID: HospIDValue };
        }

        $(document).ready(function () {
            $("#uploadButton").bind("click", function () {
                $("#window").data("kendoWindow").open();
                $("#window").data("kendoWindow").center();
                $("#uploadButton").hide();
                //$("#uploadButton").attr('disabled','disabled');
            });
        });

        function GetData() {
            // 取得資料前,先把條件變數做整理
            var HospIDValue = $("#ddlHospital").data("kendoDropDownList").value();
            var startDateTimeValue = $("#startDateTime").data("kendoDatePicker").value();
            var endDateTimeValue = $("#endDateTime").data("kendoDatePicker").value();

            // 產生表頭資料
            $("#grid_LP").data("kendoGrid").dataSource.read({ sHospID: HospIDValue, startDate: startDateTimeValue, endDate: endDateTimeValue });

            // 測試取得資料內容
            //alert(HospIDValue + " " + dateToString(startDateTimeValue) + " " + dateToString(endDateTimeValue));
        }

        function dateToString(date) {
            var str = date.getFullYear() + "/";
            str += ('0' + (date.getMonth() + 1)).slice(-2) + "/";
            str += ('0' + date.getDate()).slice(-2) 
            return str;
        }
    </script>

    <style>
        /*Icon to the left side of the titlebar */
        .k-alert .k-window-titlebar::before {
            content: '訊息';
            /*font-family: "FontAwesome";*/
            font-weight: bold;
            font-size: 18px;
        }
        /*Icon to the right side of the titlebar */
        .k-alert .k-window-titlebar::after {
            /*font-family: "FontAwesome";
            content: "\f059";*/
            font-weight: bold;
            font-size: 18px;
            float: right;
        }

        .k-alert .k-window-titlebar .k-dialog-title {
            visibility: collapse;
        }

        .k-alert .k-content {
            font-size: 40px !important;
        }

        .k-dialog.k-alert .k-dialog-titlebar {
            background-color: #3f51b5;
            color: white;
        }

        .k-dialog.k-alert .k-button {
            background-color: #3f51b5;
            color: white;
        }

        .k-dialog .k-header {
            background-color: #F5F5F5;
        }

        .k-grid-header .k-header .k-link {
            color: white !important;
        }
                
        #grid_LP .k-grid-header .k-header {
            background-color: #18538b;
        }

        #grid_LPD .k-grid-header .k-header {
            background-color: #18538b;
        }
        
        #grid_UploadFile .k-grid-header .k-header {
            background-color: #005384;
        }
    </style>
</head>
<body>
    <h2>申報資料上傳作業</h2>
    <div class="container-fluid">
        <div class="row" style="padding-bottom:5px;">
            <div class="col-md-4">
                <div class="input-group" style="float:left;">
                    <span class="input-group-addon no-modify-color">醫事機構：</span>
                    @(Html.Kendo().DropDownList()
                        .Name("ddlHospital")
                        .DataTextField("HospName")
                        .DataValueField("HospID")                        
                        .Filter("contains")
                        .DataSource(source =>
                        {
                            source.Read(read =>
                            {
                                read.Action("GetHospital", "Sys", new { HospID = @ViewBag.HospID });
                            }).ServerFiltering(false); ;
                        })
                        .Enable(true)
                        .HtmlAttributes(new { @class = "form-control pull-left" })
                    )
                </div>
            </div>
            <div class="col-md-4">
                <div class="input-group" style="float:left;">
                    <span class="input-group-addon no-modify-color">檢驗資料查詢區間：</span>
                    @(Html.Kendo().DatePicker().Name("startDateTime")
                        .Value(DateTime.Today)
                        .Max(DateTime.Today)
                        .ParseFormats(new string[] { "yyyy/MM/dd" })
                        //.Events(e => e.Change("startChange"))
                        .HtmlAttributes(new { style = "width: 35%", title = "datetimepicker" }))
                    至
                    @(Html.Kendo().DatePicker().Name("endDateTime")
                        .Value(DateTime.Today)
                        //.Min(DateTime.Today)
                        .ParseFormats(new string[] { "yyyy/MM/dd" })
                        //.Events(e => e.Change("endChange"))
                        .HtmlAttributes(new { style = "width: 35%", title = "datetimepicker" }))

                    <div style="float:right;"><button id="QueryButton" class="btn bg-blue-active" onclick="GetData()">查詢</button></div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="input-group" style="float:left;">
                    <span class="input-group-addon no-modify-color">上傳時間設定：</span>
                    @(Html.Kendo().DateTimePicker()
                            .Name("uploadDateTime")
                            .Value(DateTime.Today)
                            .HtmlAttributes(new { style = "width: 100%", title = "datetimepicker" })
                        .DateInput())
                </div>
            </div>
            <div class="col-md-1">
                @*<div style="float:left;padding-right:10px;"><button type="submit" class="btn bg-blue-active">查詢</button></div>*@
                <span id="uploadButton" class="btn bg-blue-active">上傳檢驗檔案</span>
            </div>
        </div>
        <div class="row">
            <div class="col-md-8">
                <div class="box box-success">
                    <div class="box-header with-border head-title">
                        <h3 class="box-title">檢驗單據資料</h3>
                        <div class="box-tools pull-right">
                            <button type="button" class="btn btn-box-tool head-title" data-widget="collapse" data-toggle="tooltip">
                                <i class="fa fa-minus"></i>
                            </button>
                        </div>
                    </div>
                    <div class="box-body">
                        <div id="myWindow">
                            @(Html.Kendo().Grid<ZMCMSv2Sys.ViewModels.ViewModel_LP>()
                                .Name("grid_LP")
                                .Columns(columns =>
                                {
                                    columns.Bound(d => d.id).Hidden(true);
                                    columns.Bound(d => d.sno);
                                    columns.Bound(d => d.laboratory_date).Format("{0: yyyy-MM-dd HH:mm:ss}");
                                    columns.Bound(d => d.apply_date).Format("{0: yyyy-MM-dd HH:mm:ss}");
                                    columns.Bound(d => d.report_date).Format("{0: yyyy-MM-dd HH:mm:ss}");
                                    columns.Bound(d => d.patient_id).Hidden(true);
                                    columns.Bound(d => d.patient_name);
                                })
                                .ColumnMenu()
                                .Pageable(page => page.Refresh(true)
                                    .ButtonCount(30)
                                    .PageSizes(new[] { 50, 100, 300, 500, 1000 })
                                    .Messages(message => message.ItemsPerPage("每頁顯示數目")))
                                .Selectable(selectable => selectable.Mode(GridSelectionMode.Single).Type(GridSelectionType.Row))
                                .Events(events => { events.Change("Grid_OnRowSelect"); })
                                .Navigatable()
                                .Sortable(sortable => { sortable.SortMode(GridSortMode.MultipleColumn); })
                                .Filterable().Scrollable(scrollable => scrollable.Enabled(true).Height("150"))
                                .DataSource(dataSource => dataSource.Ajax()
                                    .Sort(x => { x.Add("laboratory_date").Ascending(); })   //; x.Add("d2").Ascending()
                                    .Model(model => { model.Id(h => h.id); })
                                    .Read(read => read.Action("GetLP", "LISUpload").Data("additionalData"))
                                    .Events(events => events.Error("error_handler").Sync("sync_handler"))
                                    .PageSize(50)
                                )
                                .NoRecords("目前未有任何資料顯示 !")
                            )
                        </div>
                    </div>
                </div>

                <div class="box box-success">
                    <div class="box-header with-border head-title">
                        <h3 class="box-title">檢驗細項資料</h3>
                        <div class="box-tools pull-right">
                            <button type="button" class="btn btn-box-tool head-title" data-widget="collapse" data-toggle="tooltip">
                                <i class="fa fa-minus"></i>
                            </button>
                        </div>
                    </div>
                    <div class="box-body">
                        <div id="myWindow">
                            @(Html.Kendo().Grid<ZMCMSv2Sys.ViewModels.ViewModel_LPD>()
                                .Name("grid_LPD")
                                .Columns(columns =>
                                {
                                    columns.Bound(d => d.id).Hidden(true);
                                    columns.Bound(d => d.laboratoryPatient_id).Hidden(true);
                                    columns.Bound(d => d.laboratoryItem_id).Hidden(true);
                                    columns.Bound(d => d.laboratory_code);
                                    columns.Bound(d => d.laboratory_name);
                                    columns.Bound(d => d.laboratory_chnName);
                                    columns.Bound(d => d.laboratory_unit);
                                    columns.Bound(d => d.laboratory_standard);
                                    columns.Bound(d => d.laboratory_nhi_code);
                                })
                                .ColumnMenu()
                                .Pageable(page => page.Refresh(true).ButtonCount(10).PageSizes(new[] { 15, 30, 50, 100 }).Messages(message => message.ItemsPerPage("每頁顯示數目")))
                                .Selectable(selectable => selectable.Mode(GridSelectionMode.Single).Type(GridSelectionType.Row))
                                .Navigatable()
                                //.Sortable(sortable => { sortable.SortMode(GridSortMode.MultipleColumn); })
                                //.Filterable()
                                .Scrollable(scrollable => scrollable.Enabled(true).Height("250"))
                                .DataSource(dataSource => dataSource.Ajax()
                                    .Sort(sort => sort.Add("intSeq").Ascending())
                                    .Model(model => { model.Id(o => o.id); })
                                    .Read(read => read.Action("GetLPD", "LISUpload"))
                                    .Events(events => events.Error("error_handler"))        // .Sync("sync_handler_ordfa")
                                    .PageSize(15))
                                .NoRecords("目前未有任何資料顯示 !")
                            )
                        </div>
                    </div>
                </div>

                @*上傳檔案作業視窗*@
                @(Html.Kendo().Window().Name("window").Title("上傳檔案").Content(@<text>
                        @using (@Html.BeginForm())
                        {
                            @(Html.Kendo().Upload()
                                .Multiple(true)
                                .Name("annex")
                                .HtmlAttributes(new { accept = ".xml" })
                                .Validation(v => v.AllowedExtensions(new string[] { ".xml", ".zip" }))
                                .Async(async => async.AutoUpload(false)
                                    .Save("Async_Save", "HIUpload")     //, new { HospID = @ViewBag.HospID }
                                    .Remove("Async_Remove", "HIUpload"))
                                .Events(e => e.Upload("onUpload"))
                            )
                        }
                </text>).Draggable().Resizable().Width(350).Actions(actions => actions.Close()).Events(ev => ev.Close("onClose")).Visible(false)
                )
            </div>
            <div class="col-md-4">
                <div class="box box-danger">
                    <div class="box-header with-border head-title">
                        <h3 class="box-title">上載資料處理狀態</h3>
                        <div class="box-tools pull-right">
                            <button type="button" class="btn btn-box-tool head-title" data-widget="collapse" data-toggle="tooltip">
                                <i class="fa fa-minus"></i>
                            </button>
                        </div>
                    </div>
                    <div class="box-body">
                        <div id="myWindow">
                            @(Html.Kendo().Grid<ZMCMSv2Sys.ViewModels.ViewModel_UploadServerStatus>()
                                .Name("grid_UploadFile")
                                .Columns(columns =>
                                {
                                    columns.Bound(d => d.USRowid).Hidden(true);
                                    columns.Bound(d => d.USHospRowid).Hidden(true);
                                    columns.Bound(d => d.USHospID).Hidden(true);
                                    columns.Bound(d => d.USLoadDateTime).Format("{0: yyyy-MM-dd HH:mm:ss}").Width(120);
                                    columns.Bound(d => d.USLoadFilename);
                                    columns.Bound(d => d.USServerStatus).Width(80);
                                    columns.Bound(d => d.USRecordCount).Hidden(true);
                                })
                                .ColumnMenu()
                                .Pageable(page => page.Refresh(true)
                                .ButtonCount(30)
                                .PageSizes(new[] { 50, 100, 300, 500, 1000 })
                                .Messages(message => message.ItemsPerPage("每頁顯示數目")))
                                .Navigatable()
                                .Sortable(sortable =>
                                {
                                    sortable.SortMode(GridSortMode.MultipleColumn);
                                })
                                .Filterable()
                                .Scrollable(scrollable => scrollable.Enabled(true).Height(500))
                                .Sortable(sortable =>
                                {
                                    sortable.SortMode(GridSortMode.MultipleColumn);
                                })
                                .DataSource(dataSource => dataSource
                                    .Ajax()
                                    .Sort(x => { x.Add("USLoadDateTime").Descending(); })
                                    .PageSize(50)
                                    .Model(model => model.Id(p => p.USRowid))
                                    //.Events(events => events.Error("error_handler").Sync("sync_handler"))
                                    .Read(read => read.Action("Get_ServerStatus_By_HospID", "Sys").Data("GetHosptialSelected"))
                                )
                            )
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>
</html>